(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{370:function(t,_,v){"use strict";v.r(_);var e=v(45),s=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"网络协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络协议"}},[t._v("#")]),t._v(" 网络协议")]),t._v(" "),v("hr"),t._v(" "),v("h3",{attrs:{id:"_1-http-和-https-的基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-和-https-的基本概念"}},[t._v("#")]),t._v(" 1.http 和 https 的基本概念")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("http: 是一个客户端和服务器端请求和应答的标准（TCP），用于从 WWW 服务器传输超文本到本地浏览器的超文本传输协议。")])]),t._v(" "),v("li",[v("p",[t._v("https:是以安全为目标的 HTTP 通道，即 HTTP 下 加入 SSL 层进行加密。其作用是：建立一个信息安全通道，来确保数据的传输，确保网站的真实性。")])])]),t._v(" "),v("h3",{attrs:{id:"_2-http-和-https-的区别及优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-http-和-https-的区别及优缺点"}},[t._v("#")]),t._v(" 2.http 和 https 的区别及优缺点？")]),t._v(" "),v("ul",[v("li",[t._v("http 是超文本传输协议，信息是明文传输，HTTPS 协议要比 http 协议安全，https 是具有安全性的 ssl 加密传输协议，可防止数据在传输过程中被窃取、改变，确保数据的完整性")])]),t._v(" "),v("h3",{attrs:{id:"_3-https-协议的工作原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-https-协议的工作原理"}},[t._v("#")]),t._v(" 3.https 协议的工作原理")]),t._v(" "),v("p",[t._v("客户端在使用 HTTPS 方式与 Web 服务器通信时有以下几个步骤：")]),t._v(" "),v("ol",[v("li",[t._v("客户端使用 https url 访问服务器，则要求 web 服务器建立 ssl 链接。")]),t._v(" "),v("li",[t._v("web 服务器接收到客户端的请求之后，会将网站的证书（证书中包含了公钥），传输给客户端。")]),t._v(" "),v("li",[t._v("客户端和 web 服务器端开始协商 SSL 链接的安全等级，也就是加密等级。")]),t._v(" "),v("li",[t._v("客户端浏览器通过双方协商一致的安全等级，建立会话密钥，然后通过网站的公钥来加密会话密钥，并传送给网站。")]),t._v(" "),v("li",[t._v("web 服务器通过自己的私钥解密出会话密钥。")]),t._v(" "),v("li",[t._v("web 服务器通过会话密钥加密与客户端之间的通信。")])]),t._v(" "),v("h3",{attrs:{id:"_4-tcp-三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-tcp-三次握手"}},[t._v("#")]),t._v(" "),v("strong",[t._v("4.TCP 三次握手")])]),t._v(" "),v("p",[v("strong",[t._v("1. 第一次握手：客户端给服务端发一个 SYN（同步标志—— 同步序列编号(Synchronize Sequence Numbers)栏有效。该标志仅在三次握手建立 TCP 连接时有效。） 报文，并指明客户端的初始化序列号 SN(c)。此时客户端处于 SYN_Send 状态。")])]),t._v(" "),v("p",[v("strong",[t._v("2. 第二次握手：服务器收到客户端的 SYN 报文之后，会以自己的 SYN 报文作为应答，并且也是指定了自己的初始化序列号 ISN(s)，同时会把客户端的 ISN + 1 作为 ACK（确认标志） 的值，表示自己已经收到了客户端的 SYN，此时服务器处于 SYN_REVD 的状态。")])]),t._v(" "),v("p",[v("strong",[t._v("3. 第三次握手：客户端收到 SYN 报文之后，会发送一个 ACK 报文，当然，也是一样把服务器的 ISN + 1 作为 ACK 的值，表示已经收到了服务端的 SYN 报文，此时客户端处于 establised 状态。")])]),t._v(" "),v("p",[v("strong",[t._v("4. 服务器收到 ACK 报文之后，也处于 establised 状态，此时，双方以建立起了链接。")])]),t._v(" "),v("p",[v("strong",[t._v("三次的作用是为了确认双方的接收与发送能力是否正常。")])]),t._v(" "),v("h3",{attrs:{id:"_5-tcp-四次挥手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-tcp-四次挥手"}},[t._v("#")]),t._v(" "),v("strong",[t._v("5.TCP 四次挥手")])]),t._v(" "),v("p",[v("strong",[t._v("1. 第一次挥手：客户端发送一个 FIN 报文，报文中会指定一个序列号。此时客户端处于 FIN_WAIT1 状态。")])]),t._v(" "),v("p",[v("strong",[t._v("2. 第二次挥手：服务端收到 FIN 之后，会发送 ACK 报文，且把客户端的序列号值 + 1 作为 ACK 报文的序列号值，表明已经收到客户端的报文了，此时服务端处于 CLOSE_WAIT 状态。")])]),t._v(" "),v("p",[v("strong",[t._v("3. 第三次挥手：如果服务端也想断开连接了，和客户端的第一次挥手一样，发给 FIN 报文，且指定一个序列号。此时服务端处于 LAST_ACK 的状态。")])]),t._v(" "),v("p",[v("strong",[t._v("4. 第四次挥手：客户端收到 FIN 之后，一样发送一个 ACK 报文作为应答，且把服务端的序列号值 + 1 作为自己 ACK 报文的序列号值，此时客户端处于 TIME_WAIT 状态。需要过一阵子以确保服务端收到自己的 ACK 报文之后才会进入 CLOSED 状态")])]),t._v(" "),v("h3",{attrs:{id:"_6-跨域"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-跨域"}},[t._v("#")]),t._v(" "),v("strong",[t._v("6.跨域")])]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("定义：是指浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的。")]),t._v("、")]),t._v(" "),v("li",[v("strong",[t._v("同源策略：是浏览器对 JavaScript 实施的安全限制，只要协议、域名、端口有任何一个不同，都被当作是不同的域。")])]),t._v(" "),v("li",[v("strong",[t._v("解决方案：proxy 代理 目前常用方式。 通俗点说就是客户端浏览器发起一个请求会存在跨域问题，但是服务端向另一个服务端发起请求并无跨域，因为跨域问题归根结底源于同源策略，而同源策略只存在于浏览器")])])]),t._v(" "),v("p",[t._v("Vue-CLI 是基于 webpack 搭建的脚手架，可在 vue.config.js 中进行配置")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("module.exports = {\n  //...\n  devServer: {\n    proxy: {\n      '/api': 'http://www.hahaha.com'\n    }\n  }\n}\n")])])]),v("h1",{attrs:{id:"浏览器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[t._v("#")]),t._v(" 浏览器")]),t._v(" "),v("hr"),t._v(" "),v("h3",{attrs:{id:"_1-cookie、sessionstorage、localstorage-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-cookie、sessionstorage、localstorage-的区别"}},[t._v("#")]),t._v(" "),v("strong",[t._v("1.Cookie、sessionStorage、localStorage 的区别")])]),t._v(" "),v("ul",[v("li",[t._v("相同点：\n都作为浏览器的本地储存，保存在浏览器中")]),t._v(" "),v("li",[t._v("不同点：\n"),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}}),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("Cookie")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("sessionStorage")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("localStorage")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("时效")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("通过手动设置")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("浏览器的一次会话")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("永久保存需手动删除")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("大小")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("4kb")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("5mb")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("5mb")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("交换数据")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("自动传递到服务端")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("本地")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("本地")])])])])])]),t._v(" "),v("h3",{attrs:{id:"_2-页面加载的过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-页面加载的过程"}},[t._v("#")]),t._v(" "),v("strong",[t._v("2.页面加载的过程")])]),t._v(" "),v("ol",[v("li",[t._v("查找缓存：浏览器先查看浏览器缓存-系统缓存-路由缓存中是否有该地址页面，如果有则显示页面内容。如果没有则进行下一步。")]),t._v(" "),v("li",[t._v("DNS 域名解析：浏览器向 DNS 服务器发起请求，解析该 URL 中的域名对应的 IP 地址。")]),t._v(" "),v("li",[t._v("建立 TCP 连接：解析出 IP 地址后，根据 IP 地址和默认 80 端口，和服务器建立 TCP 连接")]),t._v(" "),v("li",[t._v("发起 HTTP 请求：浏览器发起读取文件的 HTTP 请求，，该请求报文作为 TCP 三次握手的第三次数据发送给服务器")]),t._v(" "),v("li",[t._v("服务器响应请求并返回结果：服务器对浏览器请求做出响应，并把对应的 html 文件发送给浏览器")]),t._v(" "),v("li",[t._v("关闭 TCP 连接：通过四次挥手释放 TCP 连接")]),t._v(" "),v("li",[v("strong",[t._v("浏览器渲染：客户端（浏览器）解析 HTML 内容并渲染出来，浏览器接收到数据包后的解析流程为：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("构建 DOM 树")])]),t._v(" "),v("li",[v("strong",[t._v("构建 CSS 规则树")])]),t._v(" "),v("li",[v("strong",[t._v("构建 render 树")])]),t._v(" "),v("li",[v("strong",[t._v("布局（Layout）")])]),t._v(" "),v("li",[v("strong",[t._v("绘制（Painting）")])])])]),t._v(" "),v("li",[v("strong",[t._v("JS 引擎解析过程：调用 JS 引擎执行 JS 代码")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("创建 window 对象")])]),t._v(" "),v("li",[v("strong",[t._v("加载文件")])]),t._v(" "),v("li",[v("strong",[t._v("预编译：将全局变量和方法赋值给 Window 对象")])]),t._v(" "),v("li",[v("strong",[t._v("解释执行")])])])])]),t._v(" "),v("h3",{attrs:{id:"_3-浏览器缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-浏览器缓存"}},[t._v("#")]),t._v(" "),v("strong",[t._v("3.浏览器缓存")])]),t._v(" "),v("ol",[v("li",[t._v("浏览器每次发起请求，都会先在浏览器缓存中查找该请求的结果以及缓存标识")]),t._v(" "),v("li",[t._v("浏览器每次拿到返回的请求结果都会将该结果和缓存标识存入浏览器缓存中")])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("强制缓存\n强制缓存就是向浏览器缓存查找该请求结果，并根据该结果的缓存规则来决定是否使用该缓存结果的过程。")])]),t._v(" "),v("li",[v("p",[t._v("协商缓存\n协商缓存就是强制缓存失效后，浏览器携带缓存标识向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程")])])])])}),[],!1,null,null,null);_.default=s.exports}}]);